---
- name: Weekly Linux Maintenance
  hosts: linux
  become: yes
  gather_facts: yes

  tasks:

  - name: Skip maintenance on excluded host
    meta: end_host
    when: ansible_host == '192.168.0.4'

  - name: Record system uptime, hostname, and OS version
    shell: |
      echo "=== HOSTNAME ==="
      hostname
      echo ""
      echo "=== UPTIME ==="
      uptime
      echo ""
      echo "=== OS VERSION ==="
      cat /etc/os-release
    register: audit_info

    - name: Show audit output
      debug:
        var: audit_info.stdout_lines


 # - name: Remove stale user cache files (over 14 days old)
 #   find:
 #     paths: /var/cache
 #     age: 14d
 #     recurse: yes
 #   register: stale_cache

 # - name: Delete stale cache files
 #   file:
 #     path: "{{ item.path }}"
 #     state: absent
 #   loop: "{{ stale_cache.files }}"
 #   when: stale_cache.matched > 0

 # - name: Reboot if required (Debian/Ubuntu)
 #   reboot:
 #     msg: "Weekly maintenance reboot - Debian/Ubuntu"
 #     reboot_timeout: 600
 #   when:
 #     - ansible_facts['os_family'] in ['Debian', 'Ubuntu']

 # - name: Reboot if required (RedHat)
 #   reboot:
 #     msg: "Weekly maintenance reboot - RedHat"
 #     reboot_timeout: 600
 #   when: ansible_facts['os_family'] == 'RedHat'

 # - name: Reboot if required (Alpine)
 #   reboot:
 #     msg: "Weekly maintenance reboot - Alpine"
 #     reboot_timeout: 600
 #   when: ansible_facts['os_family'] == 'Alpine'

 # - name: Wait for SSH to come back after reboot
 #   wait_for_connection:
 #     timeout: 300
 #     delay: 10
 #     sleep: 5
